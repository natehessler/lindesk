zendeskTicketNumber: 8024
zendeskLink: https://sourcegraph.zendesk.com/agent/tickets/8024
title: Booking Question
Application engineer: Stomzy Mwendwa
Customer: Booking.com 
Date: May 5, 2022
Version: 3.37.0â€‹
Deployment: kubernetes
External Services: GITLAB
Auth Providers: gitlab
Slack Links: https://sourcegraph.slack.com/archives/C024D1ESXUH/p1651766248140819
GitHub Issue Link: https://github.com/sourcegraph/customer/issues/977
Doc Update Link: N/A
Summary: Slow search, slow code intel, slow symbols loading.
Checked grafana metrics and charts Looked at logs for search UI checks
Index server handles indexing as the name suggests and places files in the file system. Webserver works like a database that reads the indexes on the file system and basically dictates search performance. We could say it's the frontend for the index server and I understand that in order to reduce network traffic, they're deployed on the same pod. The basis of the architecture is that each service requires different resources. For example, indexserver is more CPU bound, since it does the indexing. In as much as they are deployed in the same pod, the values are different based on the job that each does. To follow up on horizontally scaling Zoekt. Our fundamental unit is the repository. When increasing the number of replicas, this won't necessarily translate in improved performance. Vertical scaling is the more efficient way to improve performance. Webserver for instance is the core driver of search performance and hence the more memory it has, the better it performs. Additionally, give it more CPU, then the more it it's able to handle concurrently. I've learned that with regards to large monorepos, the webserver, when given sufficient resources generally rewards us with better performance.
Upped resources for CPU from 1/2 to 9 with a limit of 12. Made significant impact
