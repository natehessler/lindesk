zendeskTicketNumber: 6863
zendeskLink: https://sourcegraph.zendesk.com/agent/tickets/6863
title: toast-help with script
Application engineer: Warren Gifford
Customer: Toast 
Date: Mar 14
Version: 3.32.0â€‹
Deployment: docker-container
External Services: GITHUB
Auth Providers: builtin,github
Slack Links: https://sourcegraph.slack.com/archives/C01FY24RFB7/p1647283249520299
GitHub Issue Link: n/a
Doc Update Link:
Summary: i've got 1000+ feature flags, and I'd like to automate a sourcegraph search for each flag so i can aggregate the results and determine which flags are referenced in multiple repos. Anyone have tips for how i might do that?
Hey again @Jake Taylor, wanted to share some thoughts with you here.In my understanding of your use case I think running searches against our graphQL api is probably going to be really handy, there you can gather info like repositoriesCount to be consumed programmatically. You can also use this api via src with the src api sub command (doc).Heres an example of a such a query on a test instance of mine, and its resultsquery - { search(query: "rare string") { stats { approximateResultCount } results { repositoriesCount matchCount repositories { name } } } }
results { "data": { "search": { "stats": { "approximateResultCount": "28" }, "results": { "repositoriesCount": 8, "matchCount": 28, "repositories": \[ { "name": "github.com/sourcegraph/handbook" }, { "name": "github.com/sourcegraph/openvscode-server" }, { "name": "github.com/sourcegraph/lsif-static-doc-examples" }, { "name": "github.com/sourcegraph/lsif-clang" }, { "name": "github.com/sourcegraph/zoekt" }, { "name": "github.com/sourcegraph/sourcegraph" }, { "name": "github.com/Rhia2/lmas" }, { "name": "github.com/Rhia2/lighthouse" } \] } } } }
Finally a screenshot of the graphQL API console where you can find a bunch more information about the parameters available, by browsing the explorer panel (on the right side in the screenshot)Let me know what you think and if this gets you towards your end goal
It turned out that the customer was in version 3.32.0 and in that version some graphQL fields - repositories and repositorieMatch are different -- see this PR for more info on the change https://sourcegraph.com/github.com/sourcegraph/sourcegraph/-/commit/046c1a3a9091a4b01e6c9741735fe485bd2fd126?visible=2
