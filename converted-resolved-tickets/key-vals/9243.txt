zendeskTicketNumber: 9243
zendeskLink: https://sourcegraph.zendesk.com/agent/tickets/9243
title: New Slack message in support-indeed
Application engineer: Stomzy Mwendwa
Customer: 
Date: June 22, 2022
Version: â€‹
Deployment:
External Services:
Auth Providers:
Slack Links: https://sourcegraph.slack.com/archives/CSKMGUJ58/p1655942953569929
GitHub Issue Link: https://github.com/sourcegraph/customer/issues/1096
Doc Update Link: N/A
Summary: The customer incorrectly upgraded from 3.33 directly to 3.36 which broke the database with the following errors
2022-06-22 23:57:23.760 UTC \[27730\] ERROR: canceling statement due to user request 2022-06-22 23:57:23.760 UTC \[27730\] STATEMENT: SELECT COUNT(\*) FROM event_logs WHERE user_id = \$1 AND name = \$2 2022-06-22 23:57:23.761 UTC \[27742\] ERROR: canceling statement due to user request 2022-06-22 23:57:23.761 UTC \[27742\] STATEMENT: SELECT id, name, url, user_id, anonymous_user_id, source, argument, version, timestamp FROM event_logs WHERE TRUE AND user_id = \$1 AND name = \$2 ORDER BY timestamp DESC LIMIT \$3 OFFSET \$4 2022-06-23 00:05:08.921 UTC \[15957\] ERROR: column gr.last_external_service does not exist at character 499 2022-06-23 00:05:08.921 UTC \[15957\] STATEMENT: -- source: internal/database/gitserver_repos.go:GitserverRepoStore.IterateRepoGitserverStatus ( SELECT repo.id, repo.name, NULL AS clone_status, NULL AS shard_id, NULL AS last_external_service, NULL AS last_error, NULL AS last_fetched, NULL AS last_changed, NULL AS updated_at FROM repo WHERE repo.deleted_at IS NULL AND NOT EXISTS (SELECT 1 FROM gitserver_repos gr WHERE gr.repo_id = repo.id) ) UNION ALL ( SELECT repo.id, repo.name, gr.clone_status, gr.shard_id, gr.last_external_service, gr.last_error, gr.last_fetched, gr.last_changed, gr.updated_at FROM repo JOIN gitserver_repos gr ON gr.repo_id = repo.id WHERE repo.deleted_at IS NULL AND gr.shard_id = '' ) 2022-06-23 00:05:30.455 UTC \[11595\] ERROR: column gr.last_external_service does not exist at character 499 2022-06-23 00:05:30.455 UTC \[11595\] STATEMENT: -- source: internal/database/gitserver_repos.go:GitserverRepoStore.IterateRepoGitserverStatus ( SELECT repo.id, repo.name, NULL AS clone_status, NULL AS shard_id, NULL AS last_external_service, NULL AS last_error, NULL AS last_fetched, NULL AS last_changed, NULL AS updated_at FROM repo WHERE repo.deleted_at IS NULL AND NOT EXISTS (SELECT 1 FROM gitserver_repos gr WHERE gr.repo_id = repo.id) ) UNION ALL ( SELECT repo.id, repo.name, gr.clone_status, gr.shard_id, gr.last_external_service, gr.last_error, gr.last_fetched, gr.last_changed, gr.updated_at FROM repo JOIN gitserver_repos gr ON gr.repo_id = repo.id WHERE repo.deleted_at IS NULL AND gr.shard_id = '' ) 2022-06-23 00:06:22.142 UTC \[22766\] ERROR: column gr.last_external_service does not exist at character 499 2022-06-23 00:06:22.142 UTC \[22766\] STATEMENT: -- source: internal/database/gitserver_repos.go:GitserverRepoStore.IterateRepoGitserverStatus ( SELECT repo.id, repo.name, NULL AS clone_status, NULL AS shard_id, NULL AS last_external_service, NULL AS last_error, NULL AS last_fetched, NULL AS last_changed, NULL AS updated_at FROM repo WHERE repo.deleted_at IS NULL AND NOT EXISTS (SELECT 1 FROM gitserver_repos gr WHERE gr.repo_id = repo.id) ) UNION ALL ( SELECT repo.id, repo.name, gr.clone_status, gr.shard_id, gr.last_external_service, gr.last_error, gr.last_fetched, gr.last_changed, gr.updated_at FROM repo JOIN gitserver_repos gr ON gr.repo_id = repo.id WHERE repo.deleted_at IS NULL AND gr.shard_id = '' )
Exec into pgsql and select \* from schema_migrations to check for a dirty database possibility. Create postgres dumps for backup in order to check if we can rollback
Instead of rolling back the DB, engineering folks helped updating the versions data to say we were running 3.35.0 most recently. This should allow us to do the next step Update the instance to 3.36.0 and ensure that the frontend starts up Given that the migrations seemed to have worked, this shouldn't pose any issues unless the site-admin has done something with the schema in the meantime.
The ingress configuration for sourcegraph-frontend was modified incorrectly. Essentially a new rule was added which had all traffic to sourcegraph.indeed.tech going nowhere.
The admin has updated the config. We are waiting for an update for it to go through the internal deployment processes.
N/A
