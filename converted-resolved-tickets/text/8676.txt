-   Application engineer: Stomzy Mwendwa
-   Customer: Booking.com 
-   Date: June 2, 2022
-   Version: 3.37.0â€‹
-   Deployment: kubernetes
-   External Services: GITLAB
-   Auth Providers: gitlab
-   Slack Links: https://sourcegraph.slack.com/archives/C024D1ESXUH/p1654170519113609
-   GitHub Issue Link:N/A
-   Doc Update Link: N/A
We had another incident where our main monorepo was recloned yesterday afternoon. This is the second time now :thinking_face: Sadly our logging storage has a max size restriction on the message fields and the gitserver logs are rotated already on the node. Looks very similar to the last time where git was running out of memory on the node.
https://github.com/sourcegraph/customer/issues/876
The problem here is with the git garbage collector which is, in an oversimplified way, making the monorepo seem corrupt due to the gc.log files present in .git We'd want to prevent this from happening by setting git config gc.auto 0to core/main 's git config. What we're doing here is to temporarily disable garbage collection on git fetches for the monorepo. We've observed that possible cause for this occurrence is, git fetches call git gc in the background. When these fail, it then places a gc.log file in .git. Our janitor job picks up the gc.log file(which it interprets as the repo looking like it's corrupt - which isn't the case) and this triggers a reclone. So this workaround should stabilize things until the fix is out.
