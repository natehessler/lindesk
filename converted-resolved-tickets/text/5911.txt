-   Application engineer: Jason Harris
-   Customer: Mercury 
-   Date: Jan 31
-   Version: â€‹3.24
-   Deployment: docker-compose
-   External Services:
-   Auth Providers:
-   Slack Links: n/a
-   GitHub Issue Link: n/a
-   Doc Update Link: n/a
Customer attempted to upgrade from 3.24 all the way to 3.36 in one fell swoop. This led to every error one may expect, most dirty database errors, but also complete failures to migrate the db all together. I informed the customer that they would need to revert back to 3.24, and upgrade sequentially. However, they were unable to remember their password. This became the main issue.
Security check. Passed that. Asked them to use the recovery option. They had never set that up, so they couldn't. Asked them to set up smtp email to use recovery option by updating the site-config via SSH (they still had SSH access). They were resistant to this because they didn't want to standup an smtp server. I set up my own instance on an EC2, just as they did, and attempted to manually change the password hash for the user be creating a new hash and updating the table. This worked for me because I didn't have a URL configured. However, they did, and so it did not work for them.
After trying every possible means of recovering or changing their password, I informed the customer (using free open source) that it would be best if they simply spun up a new instance, and started over. They were very open to this, as they just wanted to get back to work. In the future, I'm not sure there is a workaround for this.
